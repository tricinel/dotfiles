[include]
  path = ~/.gitconfig.local
[ui]
	color = auto
[diff]
	compactionHeuristic = true
  tool = difftastic
	algorithm = histogram
	context = 10
	colorMoved = plain
  renames = true
[difftoll]
	prompt = false
	cmd = /usr/local/bin/icdiff --line-numbers $LOCAL $REMOTE
[difftool]
	prompt = false
[difftool "difftastic"]
	cmd = difft "$LOCAL" "$REMOTE"
[pager]
	difftool = true
[push]
	default = simple
	followTags = true
	autoSetupRemote = true
[pull]
  rebase = true
[merge]
  conflictstyle = zdiff3
[rebase]
	autostash = true
[fetch]
	prune = true
  pruneTags = true
  all = true
[init]
	defaultBranch = main
[gpg]
  program = gpg2
[rerere]
	enabled = true
  autoupdate = true
[core]
	pager = delta
[interactive]
	diffFilter = delta --color-only
# The git-detail diff tool for the pager
[delta]
  navigate = true
[color]
	ui = true
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	meta = 11
	frag = magenta bold
	func = 146 bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
[column]
	ui = auto
[branch]
	sort = -committerdate
[tag]
  sort = version:refname
[help]
  autocorrect = prompt
[alias]
	staash = stash --all
	# Undo a `git push`
	undopush = push --force-with-lease origin HEAD^:master
	# Pretty 'git log'
	ls = log --graph --pretty=format:'%Cred%h%Creset %C(cyan)%an%Creset - %C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
	# Get graph-based logs for all branches showing commit stats (additions, deletions)
	# --decorate will give information about which branch a commit was made on where applicable
	la = log --graph --all --decorate --stat --date=iso
	# git log -p with difftastic
	dlog = "!f() { GIT_EXTERNAL_DIFF=difft git log -p --ext-diff $@; }; f"
	# Summaries of git log with commit count summary only sorted according to the number of commits per author
	stats = shortlog -sn
	# Display a summary of all deleted files including paths
	deleted = log --diff-filter=D --summary
	# List all the commits related to a file, with the diff of the changes
	changed = log -u
	# List all conflicted files
	conflicts = diff --name-only --diff-filter=U
	cob = checkout -b
	co = checkout
	p = push
	l = pull
	f = fetch
	b = branch
	s = status -sb
	c = commit
	a = add
	aa = add -A
	unstage = reset --
	amend = commit --amend -C HEAD
	po = push origin $(current_branch)
	cm = commit -m
	undo = reset --soft HEAD^
	# Find out which branches contain the commit hash
	contains = branch -a --contains
	# Diff tool
	dft = difftool
	# List all the aliases
	alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
